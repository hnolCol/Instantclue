
import matplotlib.font_manager
from ...color.data import colorParameterRange
from ...statistics.statistics import clusteringMethodNames

import numpy as np

clusterMethodNames = list(clusteringMethodNames.keys())
REQUIRED_ATTR_NAMES = ["id","name","value","dtype","range","parent","parentType","description"]
arrowOptions = ["arc3","arc3,rad=0.","arc3,rad=0.3","arc3,rad=-0.3",
                "angle,angleA=-90,angleB=180,rad=0",
                "angle,angleA=-90,angleB=180,rad=5",
                "angle,angleA=-90,angleB=10,rad=5",
                "arc,angleA=-90,angleB=0,armA=30,armB=30,rad=0",
                "arc,angleA=-90,angleB=0,armA=30,armB=30,rad=5",
                "arc,angleA=-90,angleB=0,armA=0,armB=40,rad=0",
                "bar,fraction=0.3",
                "bar,fraction=-0.3",
                "bar,angle=180,fraction=-0.2"]
encodingsCommonInPython = ['utf-8','ascii','ISO-8859-1','iso8859_15','cp037','cp1252','big5','euc_jp']
commonSepartor = ['tab',',','space',';','/','&','|','^','+','-']
decimalForFloats = ['.',','] 
compressionsForSourceFile = ['infer','gzip', 'bz2', 'zip', 'xz']
nanReplaceString = ['-','None', 'nan','  ']
thoursandsString = ['None',',','.']
MTMethods = ["bonferroni","sidak","holm-sidak","holm","simes-hochberg","hommel","fdr_bh","fdr_by","fdr_tsbh","fdr_tsbky"]
FONT_FAMILIES = np.unique([f.name for f in matplotlib.font_manager.fontManager.afmlist]).tolist()

WIKI_LINKGS = {
    "Main Figure":"Main-Figure", #wiki extension
    "Boxplot" : "Plot-Types#boxplot",
    "Barplot" : "Plot-Types#barplot",
    "Clusterplot":"Cluster-plot",
    "Lineplot" : "Plot-Types#lineplot",
    "Cluster (HClust)": "Heatmap---Hierarchical-Clustering",
    "Matplotlib" : "Chart-Appearance-Settings-(Font-size,-ticks,-grids..)",
    "Load Data" : "Load-files",
    "Groups" : "Groupings"
}

DEFAULT_PARAMETER = [
    {
    "name"          :   "one.sample.t.test.popmean",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Statistics (one sample tests)",
    "description"   :   "Expected value in null hypothesis."
    },
    {
    "name"          :   "one.sample.t.test.alternative",
    "value"         :   "two-sided",
    "dtype"         :   str,
    "range"         :   ["two-sided","less","greater"],
    "parent"        :   "intern",
    "parentType"    :   "Statistics (one sample tests)",
    "description"   :   "The alternative hypothesis to be tested."
    },
    {
    "name"          :   "one.sample.wilcoxon.alternative",
    "value"         :   "two-sided",
    "dtype"         :   str,
    "range"         :   ["two-sided","less","greater"],
    "parent"        :   "intern",
    "parentType"    :   "Statistics (one sample tests)",
    "description"   :   "The alternative hypothesis to be tested."
    },
    {
    "name"          :   "one.sample.wilcoxon.correction",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Statistics (one sample tests)",
    "description"   :   "If True, apply continuity correction by adjusting the Wilcoxon rank statistic by 0.5 towards the mean value when computing the z-statistic if a normal approximation is used."
    },
    {
    "name"          :   "one.sample.wilcoxon.zero_method",
    "value"         :   "wilcox",
    "dtype"         :   str,
    "range"         :   ["wilcox","pratt","zsplit"],
    "parent"        :   "intern",
    "parentType"    :   "Statistics (one sample tests)",
    "description"   :   "If True, apply continuity correction by adjusting the Wilcoxon rank statistic by 0.5 towards the mean value when computing the z-statistic if a normal approximation is used."
    },
    {
    "name"          :   "label.font.size",
    "value"         :   12,
    "dtype"         :   float,
    "range"         :   [0.5,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Graphical User Interface",
    "description"   :   "Standard fontsize for the graphical user interface. The effect will only be visible after a restart."
    },
    {
    "name"          :   "label.font.family",
    "value"         :   "Helvetica",
    "dtype"         :   str,
    "range"         :   ["Helvetica"],
    "parent"        :   "intern",
    "parentType"    :   "Graphical User Interface",
    "description"   :   "Standard fontsize for the graphical user interface. The effect will only be visible after a restart."
    },
    {
    "name"          :   "export.file.clipboard.separator",
    "value"         :   "tab",
    "dtype"         :   str,
    "range"         :   commonSepartor,
    "parent"        :   "intern",
    "parentType"    :   "Export Data",
    "description"   :   "Separator to be used when export data to clipboard.."
    },
    {
    "name"          :   "load.file.encoding",
    "value"         :   "utf-8",
    "dtype"         :   str,
    "range"         :   encodingsCommonInPython,
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "Encoding used to read files."
    },
    {
    "name"          :   "load.file.skiprows",
    "value"         :   0,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "Number of rows to skip"
    }, 
    {
    "name"          :   "load.file.column.separator",
    "value"         :   "tab",
    "dtype"         :   str,
    "range"         :   commonSepartor,
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "Separator to find columns in file."
    },
    {
    "name"          :   "load.file.float.decimal",
    "value"         :   ".",
    "dtype"         :   str,
    "range"         :   decimalForFloats,
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "Decimal in numbers."
    },
    {
    "name"          :   "load.file.float.thousands",
    "value"         :   "None",
    "dtype"         :   str,
    "range"         :   thoursandsString,
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "None if no thousands separator is present."
    },
    {
    "name"          :   "load.file.na.values",
    "value"         :   "#VALUE!;#DIV/0!",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "Additional na values. If you want to provide multiple value separate them by a semicolon ';'."
    },
    {
    "name"          :   "Object Replace String",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Load Data",
    "description"   :   "Missing categories will be replaced by this string."
    }, 
    {
    "name"          :   "data.view.use.clipping",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Data View",
    "description"   :   "If True, viewing the data will use clipping if QuickSelect widgets."
    },
    {
    "name"          :   "data.quick.subset.ignore.nanString",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Data View",
    "description"   :   "If True, when subsetting data using the QuickFilter Icon (top-left) the given nanString ('-' by default) will be ignored. If False, it will not be ignored."
    },
    {
    "name"          :   "data.shortcut.subset.operator",
    "value"         :   "or",
    "dtype"         :   str,
    "range"         :   ["or","and"],
    "parent"        :   "intern",
    "parentType"    :   "Data View",
    "description"   :   "Subsetting using useful shortcuts is avaible for categorical columns using the context menu.\nThe operator is used when multiple columns are selected."
    },
    {
    "name"          :   "explode.split.string",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Data View",
    "description"   :   "Split string to be used when the explode function is applied."
    },
    {
    "name"          :   "colorMap",
    "value"         :   "RdYlBu",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Default color palette used for plots."
    },
    {
    "name"          :   "arrowColor",
    "value"         :   "#5C5C5B",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "Arrow color.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "arrowStyle",
    "value"         :   "arc3",
    "dtype"         :   str,
    "range"         :   arrowOptions,
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "Style of arrow used to annotate scatter plots."
    },
    {
    "name"          :   "annotationFontSize",
    "value"         :   9,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "Font size of annotations."
    },
    {
    "name"          :   "tooltipFontSize",
    "value"         :   6,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "Font size of tooltip in XY plots and boxplots."
    },
    {
    "name"          :   "annotationFontFamily",
    "value"         :   "Arial",
    "dtype"         :   str,
    "range"         :   ["monospace","serif","sans-serif","Arial"],
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "Font size of annotations."
    },
    {
    "name"          :   "multiLineAnnotation",
    "value"         :   "new line",
    "dtype"         :   str,
    "range"         :   ["tab","new line","_",";"],
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "How to handle multi line annotations."
    },
    {
    "name"          :   "annotate.in.all.plots",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "If enabled, annotations will be made in all active scatter plots."
    },
    {
    "name"          :   "annotate.max.length",
    "value"         :   40,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Annotation",
    "description"   :   "Length of string for annotation. If the string is longer than the given value, '..' will be added to the string."
    },
    {
    "name"          :   "twoColorMap",
    "value"         :   "RdBu_r",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Default color palette used for two color plots such as heatmaps."
    },
    {
    "name"          :   "hclustSizeColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Default color palette used for size color maps in heatmaps."
    },
    {
    "name"          :   "quickSelectColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Default color palette used to label selections in Quick Select widget."
    },
    {
    "name"          :   "alpha",
    "value"         :   0.75,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Sets alpha of scatter markers."
    },
    {
    "name"          :   "desat",
    "value"         :   0.85,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Sets desaturation of colors."
    },
    {
    "name"          :   "nanColor",
    "value"         :   "#efefef",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "colorManager",
    "parentType"    :   "Color",
    "description"   :   "Color for nanValues, '-' or custom nanString in plots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "axis.title.box.background",
    "value"         :   "#efefef",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Color",
    "description"   :   "Background color for title boxes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "replaceObjectNan",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "data",
    "parentType"    :   "Filter",
    "description"   :   "Sets the default string to replace missing objects in categorical column.\nThis string will also be used when a categorical filtering is applied.",
    },
    {
    "name"          :   "splitString",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "categoricalFilter",
    "parentType"    :   "Filter",
    "description"   :   "Sets the default splitString to find categories in filters.",
    },
    {
    "name"          :   "minStringLength",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "categoricalFilter",
    "parentType"    :   "Filter",
    "description"   :   "Sets the default minimum string length before the data view is updated.",
    },
    {
    "name"          :   "operator",
    "value"         :   "and",
    "dtype"         :   str,
    "range"         :   ["and","or"],
    "parent"        :   "numericFilter",
    "parentType"    :   "Filter",
    "description"   :   "Sets the default operator for numeric filtering.",
    },
    {
    "name"          :   "leading.string.numeric.filter",
    "value"         :   "NumericFilter_",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Filter",
    "description"   :   "Leading string for column names created by numerical filtering.",
    },
    {
    "name"          :   "leading.string.numeric.filter.subset",
    "value"         :   "NumericSubset_",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Filter",
    "description"   :   "Leading string for subsets created by numerical filtering.",
    },
    {
    "name"          :   "consecutive.values.ignore.nan",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Filter",
    "description"   :   "If True, nans will be removed row-wise before testing for consecutive increasing/decreasing values.",
    },
    {
    "name"          :   "consecutive.values.min.non.nan",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Filter",
    "description"   :   "Number of non-nan values required for consecutive value detection.",
    },
    {
    "name"          :   "axes.facecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the background of plot axes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "figure.facecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the background of plot axes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "axes.spines.left",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable left side frame.",
    },
    {
    "name"          :   "axes.spines.right",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable right side frame.",
    },
    {
    "name"          :   "axes.spines.top",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable top side frame.",
    },
        {
    "name"          :   "axes.spines.bottom",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable bottom side frame.",
    },
    {
    "name"          :   "xtick.color",
    "value"         :   "#000000",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the background of plot axes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
        {
    "name"          :   "ytick.color",
    "value"         :   "#000000",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the background of plot axes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   'axes.edgecolor',
    "value"         :   "#000000",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the background of plot axes.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "axes.grid",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable axis grid.",
    },
    {
    "name"          :   "axes.grid.axis",
    "value"         :   "both",
    "dtype"         :   str,
    "range"         :   ["x", "y", "both"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable axis grid for specific axis.",
    },
    {
    "name"          :   "axes.grid.which",
    "value"         :   "both",
    "dtype"         :   str,
    "range"         :   ["major", "minor", "both"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Which axis grid lines should be drawn.",
    },
    {
    "name"          :   "axes.labelsize",
    "value"         :   10,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size of x- and y-axis labels.",
    },
    {
    "name"          :   "axes.titlesize",
    "value"         :   10,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size axis title labels.",
    },
    {
    "name"          :   "axes.titlepad",
    "value"         :   4,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the padding of the title to the axis.",
    },
    {
    "name"          :   "axes.linewidth",
    "value"         :   0.6,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size of x- and y-axis labels.",
    },
    {
    "name"          :   "copy.to.clipboard.dpi",
    "value"         :   400,
    "dtype"         :   int,
    "range"         :   [40,1200],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the dpi for png exports to clipboard.",
    },
        {
    "name"          :   "copy.to.clipboard.background.transparent",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [False,True],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable transparent background.",
    },
    {
    "name"          :   "savefig.dpi",
    "value"         :   600,
    "dtype"         :   int,
    "range"         :   [72,800],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets the dpi for png exports.",
    },
    {
    "name"          :   "xtick.labelsize",
    "value"         :   10,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size of xtick labels.",
    },
    {
    "name"          :   "ytick.labelsize",
    "value"         :   10,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size of ytick labels.",
    },
    {
    "name"          :   "xtick.direction",
    "value"         :   "in",
    "dtype"         :   str,
    "range"         :   ["in","out"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size of xtick labels.",
    },
    {
    "name"          :   "ytick.direction",
    "value"         :   "in",
    "dtype"         :   str,
    "range"         :   ["in","out"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets font size of ytick labels.",
    },
    {
    "name"          :   "xtick.major.size",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets length of xticks.",
    },
    {
    "name"          :   "xtick.minor.size",
    "value"         :   1,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets length of minor xticks.",
    },
    {
    "name"          :   "ytick.major.size",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets length of yticks.",
    },
    {
    "name"          :   "ytick.minor.size",
    "value"         :   1,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets length of yticks.",
    },
    {
    "name"          :   "xtick.major.pad",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets padding of xticks.",
    },
    {
    "name"          :   "ytick.major.pad",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets padding of yticks.",
    },
    {
    "name"          :   "xtick.major.width",
    "value"         :   0.4,
    "dtype"         :   float,
    "range"         :   [0.0001,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets width of x ticks (major).",
    },
    {
    "name"          :   "xtick.minor.width",
    "value"         :   0.4,
    "dtype"         :   float,
    "range"         :   [0.0001,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets width of x ticks (minor).",
    },
    {
    "name"          :   "ytick.major.width",
    "value"         :   0.4,
    "dtype"         :   float,
    "range"         :   [0.0001,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets width of y ticks (major).",
    },
    {
    "name"          :   "ytick.minor.width",
    "value"         :   0.4,
    "dtype"         :   float,
    "range"         :   [0.0001,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Sets width of y ticks (minor).",
    },
    {
    "name"          :   "ytick.minor.visible",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable minor ticks on y axis.",
    },
    {
    "name"          :   "xtick.minor.visible",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Enable/disable minor ticks on x axis.",
    },   
    {
    "name"          :   "legend.fontsize",
    "value"         :   7,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend",
    "description"   :   "Legend font size for legends.",
    },
    {
    "name"          :   "legend.mainfigure.fontsize",
    "value"         :   7,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend",
    "description"   :   "Legend font size for main figure exports.",
    },
    {
    "name"          :   "legend.title.fontsize",
    "value"         :   8,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend",
    "description"   :   "Legend font size for legends.",
    },
    {
    "name"          :   "legend.title.mainfigure.fontsize",
    "value"         :   7,
    "dtype"         :   float,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend",
    "description"   :   "Legend font size for main figure exports.",
    },
    {
    "name"          :   "legend.label.spacing",
    "value"         :   0.85,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend",
    "description"   :   "Vertical Legend Spacing.",
    },
    {
    "name"          :   "legend.label.borderpad",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Legend",
    "description"   :   "The fractional whitespace inside the legend border. Measured in font-size units.",
    },

   
    {
    "name"          :   "pdf.fonttype",
    "value"         :   42,
    "dtype"         :   int,
    "range"         :   [3,42],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "Set fonttype for pdf exports.",
    },
    {
    "name"          :   "boxen.boxprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Boxenplot",
    "description"   :   "Line style of boxes in boxenplot.",
    },
    {
    "name"          :   "boxen.width.calculation",
    "value"         :   "exponential",
    "dtype"         :   str,
    "range"         :   ["linear","exponential","area"],
    "parent"        :   "intern",
    "parentType"    :   "Boxenplot",
    "description"   :   "Line style of boxes in boxenplot.",
    },
    {
    "name"          :   "boxen.show.means",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Boxenplot",
    "description"   :   "Enable/disable rendering of the mean in a Boxenplot."
    }, 
    {
    "name"          :   "boxenplot.width.scale",
    "value"         :   1.0,
    "dtype"         :   float,
    "range"         :   [0.001,1],
    "parent"        :   "intern",
    "parentType"    :   "Boxenplot",
    "description"   :   "Scales the width of the box of each boxenplot. Setting this value below 1 will add some space between categorically separated boxes.",
    },
    {
    "name"          :   "boxplot.showfliers",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Show outliers in boxplots.",
    },
    {
    "name"          :   "boxplot.split.data.on.category",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Boxplot",
    "description"   :   "Splits data based on values in the receiver box 'Categories'.\nIf disabled. the whole dataset will be plotted against the category setups, without splitting before.",
    },
    {
    "name"          :   "nanColor.for.boxes.and.bars",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Color",
    "description"   :   "If enabled, fill box clors of boxplots or barplots will be in nanColor (see Color Setting) if no categorical column is added.",
    },
    {
    "name"          :   "boxplot.width.scale",
    "value"         :   1.0,
    "dtype"         :   float,
    "range"         :   [0.001,1],
    "parent"        :   "intern",
    "parentType"    :   "Boxplot",
    "description"   :   "Scales the width of the box of each boxplot. Setting this value below 1 will add some space between categorically separated boxes.",
    },
    {
    "name"          :   "boxplot.flierprops.markeredgewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.05,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Linewidth of outliers in boxplots.",
    },
    {
    "name"          :   "boxplot.flierprops.markeredgecolor",
    "value"         :   "#2E2E2E",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Edge marker color for outliers in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "boxplot.flierprops.markersize",
    "value"         :   3,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Edge marker color for outliers in boxplots.",
    }, 
    {
    "name"          :   "boxplot.flierprops.marker",
    "value"         :   "+",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Edge marker color for outliers in boxplots.",
    },
    {
    "name"          :   "boxplot.whiskers",
    "value"         :   1.5,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Whiskers in boxplots (n * IQR). Effects outliers.",
    },
    {
    "name"          :   "boxplot.boxprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Line style of whiskers in boxplots.",
    },
    {
    "name"          :   "boxplot.whiskerprops.linestyle",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   ["-",".","--","-."],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Line style of whiskers in boxplots.",
    },
    {
    "name"          :   "boxplot.whiskerprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.05,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Linewidth of whiskers in boxplots. Applies as well for the caps.",
    },
    {
    "name"          :   "boxplot.showcaps",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Enable/disable caps on boxplot whiskers",
    },
     {
    "name"          :   "boxplot.medianprops.color",
    "value"         :   "#2E2E2E",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Color for median line in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "boxplot.medianprops.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Linewidth of median line in boxplots.",
    },
    {
    "name"          :   "boxplot.showmeans",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Enable/disable mean for boxplots",
    },
    {
    "name"          :   "boxplot.meanprops.marker",
    "value"         :   "^",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Marker for mean in boxplots.",
    },
    {
    "name"          :   "boxplot.meanprops.markerfacecolor",
    "value"         :   "#DEDEDE",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Marker facecolor for mean in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },  
    {
    "name"          :   "boxplot.meanprops.markeredgecolor",
    "value"         :   "#171717",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Boxplot",
    "description"   :   "Marker edgeecolor for mean in boxplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },  
    {
    "name"          :   "patch.edgecolor",
    "value"         :   "#171717",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "matplotlib",
    "parentType"    :   "Patch",
    "description"   :   "Linewidth of patches",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "patch.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.05, np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Patch",
    "description"   :   "Linewidth of patches",
    },  
   {
    "name"          :   "patch.force_edgecolor",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True, False],
    "parent"        :   "matplotlib",
    "parentType"    :   "Patch",
    "description"   :   "Force patches such as barplots to draw edgecolors.",
    }, 
    {
    "name"          :   "errorbar.capsize",
    "value"         :   3,
    "dtype"         :   float,
    "range"         :   [0.1,np.inf],
    "parent"        :   "matplotlib",
    "parentType"    :   "Matplotlib",
    "description"   :   "With of errorbars in barplots / pointplots.",
    },   
    {
    "name"          :   "aggMethod",
    "value"         :   "mean",
    "dtype"         :   str,
    "range"         :   ["mean","sum"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "Aggregation method for multiple numeric columns encoded as color/size.",
    },
    {
    "name"          :   "scatterSize",
    "value"         :   50,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "Default size of scatter points in pixel.",
    },
    {
    "name"          :   "maxScatterSize",
    "value"         :   120,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "Maximal size of scatter points in pixel when a value is encoded by size.",
    },
    {
    "name"          :   "minScatterSize",
    "value"         :   20,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "Minimal size of scatter points in pixel when a value is encoded by size.",
    },
    {
    "name"          :   "transform.numeric.size.columns",
    "value"         :   "None",
    "dtype"         :   str,
    "range"         :   ["None","log2","ln","log10"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "Transform numeric values before encoding them as size. Helpful if the range is huge (e.g. > E05).",
    },
    {
    "name"          :   "scatter.edgecolor",
    "value"         :   "#171717",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Edgecolors of scatter points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "scatter.hover.color",
    "value"         :   "#B31C19",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Marker facecolor for hover scatter points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "scatter.edgelinewidth",
    "value"         :   0.2,
    "dtype"         :   float,
    "range"         :   [0.001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Line width of edges of scatter points.",
    },
    {
    "name"          :   "scatter.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Marker for scatter plot. (, equals pixel).",
    },
    {
    "name"          :   "scatter.equal.axis.limits",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "If true, all scatter plots will have equal axis limits.",
    },
    {
    "name"          :   "plotAgainstIndex",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "If enabled, plots data of each numeric column against its sorted index.",
    },
    {
    "name"          :   "scatter.volcano.significance.str",
    "value"         :   "+",
    "dtype"         :   str,
    "range"         :   "Any",
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "The string that indicates significance in respective columns. Please not that InstantClue uses the '+' as a default for numeric and categorical filters. Hence changing this is not recommended.",
    },
    {
    "name"          :   "scatter.volcano.color.sig.up",
    "value"         :   "#B31C19",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Marker facecolor for significant upregulated features (Volcano mode). If a color column is selected, this color will be used to create a colormap starting from white for the significant up-regulated features.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "scatter.volcano.color.sig.down",
    "value"         :   "#69838f",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Marker facecolor for significant downregulated features (Volcano mode). If a color column is selected, this color will be used to create a colormap starting from white for the significant down-regulated features.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "scatter.volcano.color.encode.non.sig",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   ["mean","sum"],
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "In case a color column was added in the volcano plot styling, you can disabled/enable the color encoding of non-siginficant hits. If disabled, all non-sig proteins will be shown in the nanColor (see Color properties).",
    },
    {
    "name"          :   "scatter.volcano.color.non.sig",
    "value"         :   "#424241",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Scatter",
    "description"   :   "Marker facecolor for significant downregulated features (Volcano mode). If a color column is selected, this color will be used to color encode non-significant one.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "indexSort",
    "value"         :   "ascending",
    "dtype"         :   str,
    "range"         :   ["ascending","descending"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Scatter",
    "description"   :   "If enabled, plots data of each numeric columna against its sorted index.",
    },
    {
    "name"          :   "multi.scatter.interactive",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   ["mean","sum"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Enable/Disable interactivity (hover points) for scatter plots. Might be useful for many columns.",
    },
    {
    "name"          :   "multi.scatter.top.right.type",
    "value"         :   "scatter",
    "dtype"         :   str,
    "range"         :   ["scatter","2D-Histogram"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Plot type of the top-right part of the plot.",
    },
    {
    "name"          :   "multi.scatter.bottom.left.type",
    "value"         :   "scatter",
    "dtype"         :   str,
    "range"         :   ["scatter","2D-Histogram"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Plot type of the bottom-left part of the plot.",
    },
    {
    "name"          :   "multi.scatter.diag.type",
    "value"         :   "kde",
    "dtype"         :   str,
    "range"         :   ["label-kde","kde","label"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Plot type of the diagonal of the plot.",
    },
    {
    "name"          :   "multi.scatter.sort.columns.by",
    "value"         :   "None",
    "dtype"         :   str,
    "range"         :   ["None","Grouping","Hierarch. Clustering"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Sorting of the columns. None means no sorting at all (in order of the columns in the reciever box). Grouping indicates that columns are sorted according to the currently selected grouping (if any). Hierarch. Clustering will order the columns accordingly to the clustering results (similiar to the corrmatrix - uses the same settings!)",
    },
    {
    "name"          :   "multi.scatter.add.linregress",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Enables/disables linear regression for scatter plots.",
    },
    {
    "name"          :   "multi.scatter.add.lowess",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Enables/disables lowess line for scatter plots. For many data points this can take quite some time.",
    },
    {
    "name"          :   "multi.scatter.lowess.it",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "The number of residual-based reweightings to perform.",
    },
    {
    "name"          :   "multi.scatter.lowess.delta",
    "value"         :   4,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Distance within which to use linear-interpolation instead of weighted regression.",
    },
    {
    "name"          :   "multi.scatter.add.pearson",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Enables/disables the addition of the pearson correlation coefficient.",
    },
    {
    "name"          :   "multi.scatter.background.by.pearson",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "If enabled, the background of scatter plots is colored according to the correlation coefficient.",
    },
    {
    "name"          :   "multi.scatter.background.colormap",
    "value"         :   "Reds",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Colormap to be used to indicate correlation by background color.",
    },
    {
    "name"          :   "multi.scatter.background.colorScale",
    "value"         :   "dataMinMax",
    "dtype"         :   str,
    "range"         :   ["dataMinMax","0,1","-1,1"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Colormap to be used to indicate correlation by background color.",
    },
    {
    "name"          :   "multi.scatter.add.spearman",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Enables/disables the addition of the spearman correlation coefficient.",
    },
    {
    "name"          :   "multi.scatter.add.corr.coeff.to",
    "value"         :   "all types",
    "dtype"         :   str,
    "range"         :   ["all types","scatter","2D-Histogram"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Select plot type to which the correlation coefficient(s) should be added.",
    },
    {
    "name"          :   "multi.scatter.2D.histogram.cmap",
    "value"         :   "Blues",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Colormap of the 2D histograms.",
    },
    {
    "name"          :   "multi.scatter.kde.kernel",
    "value"         :   "gaussian",
    "dtype"         :   str,
    "range"         :   ["gaussian", "tophat", "epanechnikov", "exponential", "linear", "cosine"],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Kernal used for kde.",
    },
    {
    "name"          :   "multi.scatter.kde.bandwidth",
    "value"         :   1.0,
    "dtype"         :   float,
    "range"         :   [0.0000001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "bandwidth used for kde.",
    },
    {
    "name"          :   "multi.scatter.kde.grid.search",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Enable/disable grid search. If enabled, the bandwidth setting is ignored.",
    },
    {
    "name"          :   "multi.scatter.kde.grid.search.min",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [1e-15,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Min value for grid search to determine bandwidth.",
    },
    {
    "name"          :   "multi.scatter.kde.grid.search.max",
    "value"         :   5,
    "dtype"         :   float,
    "range"         :   [1e-15,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Max value for grid search to determine bandwidth.",
    },
    {
    "name"          :   "multi.scatter.kde.grid.n.cross.val",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "Number of cross validations to find best value for bandwidth.",
    },
    {
    "name"          :   "multi.scatter.kde.log.density",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "If enabled, the log density is visualized.",
    },
    {
    "name"          :   "multi.scatter.lowess.frac",
    "value"         :   0.66,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Multi Scatter",
    "description"   :   "The fraction of the data used when estimating each y-value.",
    },
    {
    "name"          :   "lowess.show.ci",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Models (Graphs)",
    "description"   :   "If enabled, the confidence interval of the lowess fit is shown.",
    },
    {
    "name"          :   "selectionRectangleSize",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0.0,0.5],
    "parent"        :   "intern",
    "parentType"    :   "Select",
    "description"   :   "Size of rectangle. Given in fraction of axis limits. 0 equals to single point selection.",
    },
    {
    "name"          :   "hover.inactive.facecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Hover/Tooltip",
    "description"   :   "Facecolor of inactive (mouse not over) artists/items while hovering.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "absCorrCoeff",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "statCenter",
    "parentType"    :   "Correlation",
    "description"   :   "Absolute cutoff to filter row correlation matrix.\nSet 0 to disable filtering (NaN will be removed).",
    },
    {
    "name"          :   "corrMethod",
    "value"         :   "pearson",
    "dtype"         :   str,
    "range"         :   ["pearson","kendall","spearman"],
    "parent"        :   "statCenter",
    "parentType"    :   "Correlation",
    "description"   :   "Method to calculate correlation matrix.",
    },
    {
    "name"          :   "rowMetric",
    "value"         :   "euclidean",
    "dtype"         :   str,
    "range"         :   ["None","euclidean","nanEuclidean","correlation","seuclidean","minkowski","cosine","correlation","cityblock","canberra","braycurtis"], #"nanCorrelation"
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Define metric used for row dendrogram.If None, no dendrogram will be shown. Only nanEuclidean and nanCorrelation can handle nans and is significantly slower.",
    },
    {
    "name"          :   "columnMetric",
    "value"         :   "euclidean",
    "dtype"         :   str,
    "range"         :   ["None","euclidean","nanEuclidean","correlation","seuclidean","minkowski","cosine","correlation","cityblock","canberra","braycurtis"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Define metric used for column dendrogram. If None, no dendrogram will be shown. Only nanEuclidean can handle nans and is significantly slower.",
    },
    {
    "name"          :   "min.required.valid.values",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Data with nan might be clustered using the nanEuclidean distance metric. This parameter defines the minimum number of valid values that must exist.",
    },
    {
    "name"          :   "hclust.remove.rows.with.no.std",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled, rows that with a standard deviation of zero will be removed (e.g. the same value). Only applied if rowMethod or rowMetric are not None.",
    },
    {
    "name"          :   "rowMethod",
    "value"         :   "complete",
    "dtype"         :   str,
    "range"         :   ["complete","average","median","ward","weighted"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Define method used for row dendrogram. If None, no dendrogra will be shown.",
    },
    {
    "name"          :   "columnMethod",
    "value"         :   "complete",
    "dtype"         :   str,
    "range"         :   ["complete","average","median","ward","weighted"],
    "parent"        :   "statCenter",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Define method used for column dendrogram. If None, no dendrogra will be shown.",
    },
    {
    "name"          :   "keep.cluster.xaxis.fixed",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled, upon zoom the x-axis will remain at fixed limits.",
    },
    {
    "name"          :   "hclust.ask.for.groupings.to.display",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled you will be asked before plotting a hierarchical clustering which groups you would like to display.",
    },
    {
    "name"          :   "hclust.display.grouping",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled the currently selected grouping will be displayed (if the grouping contains\ncolumns used for hierarchical clustering.\nMissing values will be display by the nanColor (see Color Settings).",
    },
    {
    "name"          :   "pixel.width.per.column",
    "value"         :   25,
    "dtype"         :   int,
    "range"         :   [5,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Width of columns in pixel. If the number of columns times the width is bigger than the available space the column width will be adjusted.",
    },
    {
    "name"          :   "pixel.height.equals.width",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled, rectangles of heatmap will be adjusted to be squared if possible.",
    },
    {
    "name"          :   "hclust.pixel.border.top",
    "value"         :   130,
    "dtype"         :   int,
    "range"         :   [80,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Top border in pixel.",
    },
    {
    "name"          :   "hclust.pixel.border.left",
    "value"         :   40,
    "dtype"         :   int,
    "range"         :   [5,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Top border in pixel.",
    },
    {
    "name"          :   "hclust.pixel.border.bottom",
    "value"         :   120,
    "dtype"         :   int,
    "range"         :   [5,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Bottom border, increase if labels are not visible. If the border is higher than the pixel, the margin defaults to 15% of the figure height.",
    },
    {
    "name"          :   "hclust.color.axis.border.left",
    "value"         :   20,
    "dtype"         :   int,
    "range"         :   [5,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Border on the left side of the categorical color map in pixels. If the border is bigger than 50% of the figure, it defaults back to 15%.",
    },
    {
    "name"          :   "hclust.color.column.label.position",
    "value"         :   "top",
    "dtype"         :   str,
    "range"         :   ["top","bottom"],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Position of the labeling of the color column map on the x-axis.",
    },
    {
    "name"          :   "hclust.color.column.show",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled column name of the color column is added at the desired position.",
    },
    {
    "name"          :   "hclust.color.sort.unique.values",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled, detected unique categories will be sorted before colors are assigned.",
    },
    {
    "name"          :   "hclust.color.sort.unique.values.ascending",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Defines the sorting for color categorical values.",
    },
    {
    "name"          :   "hclust.treat.integers.as.categories",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled, columns of Integer type will be considered as categories (color columns) E.g. each value gets a unique color assigned.",
    },
    {
    "name"          :   "hclust.color.combine.categories",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled identical categorical values of different categorical columns such as '+' will get the same color in the plot.",
    },
    {
    "name"          :   "hclust.color.combine.numeric.values",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled and multiple numeric columns are used for color encoding, one color scale is calculated. If disabled, each column is assigned a individual color to.",
    },
    {
    "name"          :   "hclust.color.column.categories.colormap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Color map to be used to encode categorical data.",
    },
    {
    "name"          :   "hclust.color.column.numeric.colormap",
    "value"         :   "Blues",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Color map to be used to encode numerical data.",
    }, 
    {
    "name"          :   "colorMapLimits",
    "value"         :   "raw values",
    "dtype"         :   str,
    "range"         :   ["raw values","center 0","min = -1, max = 1","custom"],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Method how to calculate color map limits.",
    },
        {
    "name"          :   "colorMapLimits.min",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Enabled if colorMapLimits is set to custom. Minimal value.",
    },
    {
    "name"          :   "colorMapLimits.max",
    "value"         :   1.0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Enabled if colorMapLimits is set to custom. Maximal value.",
    },
    {
    "name"          :   "colorMatrixMethod",
    "value"         :   "pearson",
    "dtype"         :   str,
    "range"         :   ["pearson","kendall","spearman"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Method how to calculate color map limits.",
    },
    {
    "name"          :   "cluster.label.limit",
    "value"         :   50,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If less than given value of rows are visible in cluster, label will be added to the top right axis.",
    },
    {
    "name"          :   "quad.linewidth.rowLimit",
    "value"         :   70,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If less than given value of rows are visible in cluster, lines will be drawn around rectangles.",
    },
    {
    "name"          :   "quad.linewidth.columnLimit",
    "value"         :   70,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If less than given value of columns are visible in cluster. Lines will be drawn around rectangles.",
    },
    {
    "name"          :   "corrmatrix.show.tooltip",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "If enabled, a tooltip will be automatically initiated for a correlation matrix showing the column names and the correlation coefficient.",
    },
    {
    "name"          :   "add.column.names.in.emb.name",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "If enable, adds the used column names in the name for the embedding."
    },    
    {
    "name"          :   "lda.n.components",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Number of components for the dimensional reduction."
    },
    {
    "name"          :   "tsne.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Dimension of the embedded space."
    },
    {
    "name"          :   "tsne.perplexity",
    "value"         :   30,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """The perplexity is related to the number of nearest neighbors that 
                           is used in other manifold learning algorithms. Larger datasets usually 
                           require a larger perplexity. Consider selecting a value between 5 and 50. 
                           Different values can result in significantly different results."""
    },
    {
    "name"          :   "tsne.early_exaggeration",
    "value"         :   12,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """Controls how tight natural clusters in the original space are
                           in the embedded space and how much space will be between them. 
                           For larger values, the space between natural clusters will be 
                           larger in the embedded space. Again, the choice of this parameter 
                           is not very critical. If the cost function increases during initial 
                           optimization, the early exaggeration factor or the learning rate might 
                           be too high."""
    },
    
    {
    "name"          :   "umap.n.neighbors",
    "value"         :   15,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "statCenter",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """This determines the number of neighboring points used in local 
                            approximations of manifold structure. Larger values will result 
                            in more global structure being preserved at the loss of detailed 
                            local structure. In general this parameter should often be in the 
                            range 5 to 50, with a choice of 10 to 15 being a sensible default."""
    },
    {
    "name"          :   "umap.min.dist",
    "value"         :   0.1,
    "dtype"         :   float,
    "range"         :   [0,0.5],
    "parent"        :   "statcenter",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """This controls how tightly the embedding is allowed compress points together. 
                        Larger values ensure embedded points are more evenly distributed, 
                        while smaller values allow the algorithm to optimise more accurately with regard to local structure. 
                        ensible values are in the range 0.001 to 0.5, with 0.1 being a reasonable default"""
    },
    {
    "name"          :   "umap.metric",
    "value"         :   "euclidean",
    "dtype"         :   str,
    "range"         :   ["euclidean","correlation","seuclidean","manhattan","cityblock","braycurtis","cosine","dice","jaccard"],
    "parent"        :   "statcenter",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """This controls how tightly the embedding is allowed compress points together. 
                        Larger values ensure embedded points are more evenly distributed, 
                        while smaller values allow the algorithm to optimise more accurately with regard to local structure. 
                        ensible values are in the range 0.001 to 0.5, with 0.1 being a reasonable default"""
    },
    {
    "name"          :   "umap.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "statcenter",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """The dimension of the space to embed into. This defaults to 2 to
                        provide easy visualization, but can reasonably be set to any
                        integer value in the range 2 to 100."""
    },
    {
    "name"          :   "pca.n.components",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """The dimension of the space to embed into. This defaults to 2 to
                        provide easy visualization, but can reasonably be set to any
                        integer value in the range 2 to 100."""
    },
    {
    "name"          :   "lda.scale",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "If enabled, the mean is subtracted to scale data for least descriminant analysis."
    },
    {
    "name"          :   "pca.scale",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "If enabled, the mean is subtracted to scale data."
    },
    {
    "name"          :   "pca.add.current.grouping.only",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "If enabled, selected columns for PCA are annotated by the grouping. Otherwise test all exisiting groupings if columnNames overlap."
    },
    {
    "name"          :   "spectral.embedding.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "The dimension of the projected subspace."
    },
    {
    "name"          :   "spectral.embedding.n.affinity",
    "value"         :   "nearest_neighbors",
    "dtype"         :   str,
    "range"         :   ["nearest_neighbors","rbf"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "The dimension of the projected subspace."
    },

    {
    "name"          :   "mds.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Number of dimensions in which to immerse the dissimilarities."
    },
    {
    "name"          :   "mds.metric",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "If True, perform metric MDS; otherwise, perform nonmetric MDS."
    },
    {
    "name"          :   "isomap.n.neighbors",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Number of neighbors to consider for each point."
    },
    {
    "name"          :   "isomap.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Number of coordinates for the manifold."
    },
    {
    "name"          :   "isomap.path.method",
    "value"         :   "auto",
    "dtype"         :   str,
    "range"         :   ["auto", "FW", "D"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   """
                        ‘auto’ : attempt to choose the best algorithm automatically. 
                        ‘FW’ : Floyd-Warshall algorithm.
                        ‘D’ : Dijkstra’s algorithm.
                        """
    },
    {
    "name"          :   "locally.linear.n.components",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Number of coordinates for the manifold."
    },
    {
    "name"          :   "locally.linear.n.neighbors",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [1,100],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Number of neighbors to consider for each point."
    }, 
    {
    "name"          :   "locally.linear.method",
    "value"         :   "standard",
    "dtype"         :   str,
    "range"         :   ["standard","hessian","modified","ltsa"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Method for locally linear embedding algorithm."
    },
    {
    "name"          :   "locally.neighbors.algorithm",
    "value"         :   "auto",
    "dtype"         :   str,
    "range"         :   ["auto", "brute", "kd_tree", "ball_tree"],
    "parent"        :   "intern",
    "parentType"    :   "Dimensional Reduction",
    "description"   :   "Algorithm to use for nearest neighbors search, passed to neighbors."
    },

    {
    "name"          :   "hclustClusterColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Colormap for cluster rectangles."
    }, 
    {
    "name"          :   "hclustLabelColorMap",
    "value"         :   "Paired",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HClust)",
    "description"   :   "Colormap for color labeling."
    }, 
   
    {
    "name"          :   "barplotMetric",
    "value"         :   "mean",
    "dtype"         :   str,
    "range"         :   ["mean","median"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Barplot",
    "description"   :   "Metric to calculate bar heights."
    }, 
    {
    "name"          :   "barplotError",
    "value"         :   "CI (95%)",
    "dtype"         :   str,
    "range"         :   ["Std","CI (95%)", "CI (90%)", "CI (85%)","CI (75%)", "SEM-CI (68%)"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Barplot",
    "description"   :   "Error value in barplots."
    }, 
    {
    "name"          :   "barplot.width.scale",
    "value"         :   1.0,
    "dtype"         :   float,
    "range"         :   [0.1,1],
    "parent"        :   "intern",
    "parentType"    :   "Barplot",
    "description"   :   "Width scale of bars, if you desire some space between bars in grouped bars, set this value below 1."
    }, 
    {
    "name"          :   "boxbarviolin.border",
    "value"         :   0.25,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Barplot",
    "description"   :   "Spacing between major elements measured by their width - e.g. 0.1 means that the border of a box is 0.1 its with. Bars separated by categorical column on x-axis consider the minor spacing."
    }, 
    {
    "name"          :   "violin.points",
    "value"         :   100,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Defines the number of points to evaluate each of the gaussian kernel density estimations at."
    }, 
    {
    "name"          :   "violin.show.means",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Enable/disable rendering of the mean."
    }, 
    {
    "name"          :   "violin.show.extrema",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Enable/disable rendering of the extremas."
    }, 
    {
    "name"          :   "violin.show.quantiles",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Enable/disable the display of quantile (25 and 75) in a violin plot."
    }, 
    {
    "name"          :   "violin.show.quantiles.box",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "If enabled, shows a box within the violinplot. If False - displays a thick black line."
    }, 
    {
    "name"          :   "violin.show.quantiles.box.facecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Facecolor for rectangle box.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "violin.show.quantiles.box.edgecolor",
    "value"         :   "#000000",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Edgecolor for rectangle box / Color for line if box is disabled.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "violin.show.quantiles.box.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Linewidth of the edge for the quantile box in a violin plot."
    }, 
        {
    "name"          :   "violin.show.quantiles.box.alpha",
    "value"         :   0.8,
    "dtype"         :   float,
    "range"         :   [0.0,1.0],
    "parent"        :   "intern",
    "parentType"    :   "Violinplot",
    "description"   :   "Opacity of the quantile box in a violin plot."
    }, 
    {
    "name"          :   "barplot.minor.spacing",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Barplot",
    "description"   :   "Spacing between minor bars."
    }, 
    {
    "name"          :   "WorkingDirectory",
    "value"         :   "./",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "data",
    "parentType"    :   "General",
    "description"   :   "Default Directory to save files/images to."
    }, 
    {
    "name"          :   "json.export.orient",
    "value"         :   "records",
    "dtype"         :   str,
    "range"         :   ["split", "records", "index", "columns", "values", "table"],
    "parent"        :   "data",
    "parentType"    :   "General",
    "description"   :   "Default Directory to save files/images to."
    }, 
    {
    "name"          :   "perform.transformation.in.place",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "General",
    "description"   :   "Perform transformation in place (no new columns created)"
    }, 
    {
    "name"          :   "errorShownInDialog",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "General",
    "description"   :   "If enabled, warnings given by the backend are shown in a new dialog window instead of a small notification window in the top right screen corner."
    }, 
    {
    "name"          :   "melt.data.add.column.names",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Data Transformation",
    "description"   :   "If enabled, the melt_variable and melt_value column names will contain the numeric column headers used for melting."
    }, 
    {
    "name"          :   "exclusivesMinNonNaN",
    "value"         :   1,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "grouping",
    "parentType"    :   "Groupings",
    "description"   :   "Minimum required non-nan values in background to be called significant in target group."
    },
    {
    "name"          :   "clusterplot.method",
    "value"         :   "kmeans",
    "dtype"         :   str,
    "range"         :   clusterMethodNames,
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot",
    "description"   :   "Algorithm used to detect cluster."
    }, 
    {
    "name"          :   "clusterplot.type",
    "value"         :   "boxplot",
    "dtype"         :   str,
    "range"         :   ["boxplot","lineplot"],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot",
    "description"   :   "Plot type how detected clusters are represented."
    }, 
    {
    "name"          :   "clusterplot.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot",
    "description"   :   "Line width of lineplots."
    }, 
    {
    "name"          :   "clusterplot.lineplot.color.distance",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot",
    "description"   :   "If lineplot is selected, color the lines accordingly to the distance to the cluster center (k-means, birch)."
    }, 
    {
    "name"          :   "clusterplot.show.cluster.center",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Clusterplot",
    "description"   :   "Draw line to indicate cluster center (kmeans, birch)."
    }, 
    {
    "name"          :   "alpha.IQR",
    "value"         :   0.7,
    "dtype"         :   float,
    "range"         :   [0.01,1],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Transparency for area indicating the IQR (first and third quantile)."
    },  
    {
    "name"          :   "linewidth.median",
    "value"         :   1.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Linewidth for median in lineplots."
    }, 
    {
    "name"          :   "marker.median",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h","none"],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Marker for median line."
    }, 
    {
    "name"          :   "markeredgewidth.median",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Marker linewidth for median in lineplots."
    }, 
     {
    "name"          :   "linewidth.quickSelect",
    "value"         :   1.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Linewidth for QuickSelect items in lineplots."
    }, 
    {
    "name"          :   "marker.quickSelect",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Marker for QuickSelect lines."
    }, 
    {
    "name"          :   "markeredgewidth.quickSelect",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Lineplot",
    "description"   :   "Marker linewidth for QuickSelect items in lineplots."
    }, 
    {
    "name"          :   "histogramBins",
    "value"         :   15,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Number of bins to calculate for a histogram."
    }, 
    {
    "name"          :   "histogramCumulative",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Enable/Disable cumulative histogram."
    }, 
    {
    "name"          :   "histogramDensity",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Enable/Disable density calculation insteat of frequency."
    }, 
    {
    "name"          :   "histogramHisttype",
    "value"         :   "bar",
    "dtype"         :   str,
    "range"         :   ["bar", "barstacked", "step", "stepfilled"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Enable/Disable cumulative histogram."
    }, 
    {
    "name"          :   "histogramLog",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Enable/Disable log transformation of values before histograms are calculated."
    }, 
    {
    "name"          :   "histogramLinewidth",
    "value"         :   2,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Linewidth if histtype == step."
    }, 
    {
    "name"          :   "histogramSortCategories",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Histogram (Density)",
    "description"   :   "Enable/Disable sorting of categories on grouping."
    }, 
    {
    "name"          :   "show.counts",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Enable/Disable labeling of bars with counts."
    }, 
    {
    "name"          :   "countTransform",
    "value"         :   "none",
    "dtype"         :   str,
    "range"         :   ["none","log2","log10","ln"],
    "parent"        :   "plotterBrain",
    "parentType"    :   "Countplot",
    "description"   :   "Transforms counts for visualization. Labels will show real counts."
    },
    {
    "name"          :   "countplotLabelColorMap",
    "value"         :   "Set1",
    "dtype"         :   str,
    "range"         :   colorParameterRange,
    "parent"        :   "colorManager",
    "parentType"    :   "Countplot",
    "description"   :   "Colormap used to indicate groups for each caategorical column.."
    },
    
    {
    "name"          :   "counts.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Marker symbol for countplots."
    }, 
    {
    "name"          :   "counts.markersize",
    "value"         :   10,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Marker symbol size for countplots."
    }, 
    {
    "name"          :   "counts.markerfacecolor",
    "value"         :   "#FFFFFF",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Marker symbol facecolor for countplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "counts.markeredgecolor",
    "value"         :   "#2E2E2E",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Marker symbol edgecolor for countplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "counts.linestyle",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   ["-",".","--","-."],
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Line style for group indicators countplots."
    }, 
    {
    "name"          :   "counts.linewidth",
    "value"         :   0.8,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Line width for group indicators countplots."
    },
    {
    "name"          :   "counts.linecolor",
    "value"         :   "#1d1d1b",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Countplot",
    "description"   :   "Linecolor for group indicator in countplots.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    }, 
    {
    "name"          :   "quantile.norm.scaling",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [False,True],
    "parent"        :   "intern",
    "parentType"    :   "Normalization",
    "description"   :   "Quantile normalization. Enable/disable scaling of data to unit variance",
    }, 
    {
    "name"          :   "quantile.norm.centering",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [False,True],
    "parent"        :   "intern",
    "parentType"    :   "Normalization",
    "description"   :   "Quantile normalization. Enable/disable centering of data before scaling.",
    }, 
    {
    "name"          :   "outlier.iqr.multiply",
    "value"         :   1.8,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Outlier",
    "description"   :   "Removes outlies by calculating the inter qunatile range and multiply with this factor..",
    }, 
    {
    "name"          :   "outlier.copy.results",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Outlier",
    "description"   :   "If enabled, results with removed outliers (set to NaN) will be copied and concatenated. Otherwise data will just be replaced.",
    }, 
    {
    "name"          :   "report.distance.space",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (K-Means)",
    "description"   :   "If enabled, reports the new space, each dimension is the distance to the cluster centers..",
    }, 
    {
    "name"          :   "kmeans.default.number.clusters",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (K-Means)",
    "description"   :   "Number of clusters. Will be used by the cluster plot.",
    }, 
    {
    "name"          :   "feature.create.subset",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "If enabled, feature selection will create a new subset of the data.",
    }, 
    {
    "name"          :   "feature.selection.alpha",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0.00000001,1],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "Alpha for False positive and false discovery rate calculations for the ANOVA result.",
    }, 
    {
    "name"          :   "feature.selection.num",
    "value"         :   10,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "Number of features selected by model (SVM, random forest).",
    }, 
    {
    "name"          :   "feature.scale.data",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "If enabled, scales data before selection by model. (Z-score)",
    }, 
    {
    "name"          :   "feature.svm.c",
    "value"         :   1,
    "dtype"         :   float,
    "range"         :   [0.0000001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. The penalty is a squared l2 penalty. (from sklearn website)",
    }, 
    {
    "name"          :   "feature.randomforest.n_estimators",
    "value"         :   100,
    "dtype"         :   int,
    "range"         :   [10,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "The number of trees in the forest.",
    }, 
    {
    "name"          :   "feature.randomforest.min_samples_split",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "The minimum number of samples required to split an internal node.",
    }, 
    {
    "name"          :   "feature.variance,threshold",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [0.0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "Features with a training-set variance lower than this threshold will be removed.",
    }, 
    {
    "name"          :   "recursive.feature.elimination.cv",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "Number of cross validations performed.",
    }, 
    {
    "name"          :   "recursive.feature.elimination.min_features_to_select",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Feature Selection",
    "description"   :   "The minimum number of features to be selected.",
    }, 
    {
    "name"          :   "hdbscan.min.cluster.size",
    "value"         :   8,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HDBSCAN)",
    "description"   :   "The minimum cluster size.",
    }, 
    {
    "name"          :   "hdbscan.min.samples",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HDBSCAN)",
    "description"   :   "The larger the value of min_samples you provide, the more conservative the clustering – more points will be declared as noise, and clusters will be restricted to progressively more dense areas.",
    }, 
    {
    "name"          :   "hdbscan.cluster.selection.epsilon",
    "value"         :   0.0,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Cluster (HDBSCAN)",
    "description"   :   "Selecting a value for cluster_selection_epsilon helps us to merge clusters in these regions. Or in other words, it ensures that clusters below the given threshold are not split up any further.",
    }, 
    {
    "name"          :   "swarm.scatter.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","+","s",".","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm",
    "description"   :   "Marker for swarms that are added to charts (boxplot, barplot, violinplot)."
    }, 
    {
    "name"          :   "swarm.scatterSize",
    "value"         :   15.0,
    "dtype"         :   float,
    "range"         :   [1.0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm",
    "description"   :   "Size of swarms that are added to charts (boxplot, barplot, violinplot). The default swarm size (no addition) is set by the parameter scatterSize (Scatter Settings).",
    }, 
    {
    "name"          :   "swarm.facecolor",
    "value"         :   "#ffffff",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm",
    "description"   :   "Facecolor of swarm scatter points.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "swarm.alpha",
    "value"         :   0.6,
    "dtype"         :   float,
    "range"         :   [0.0001,1],
    "parent"        :   "intern",
    "parentType"    :   "Add Swarm",
    "description"   :   "Transparancy of swarms that are added to charts (boxplot, barplot, violinplot).",
    },
    {
    "name"          :   "pointplot.line.marker.same.color",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "If True, markerface color and line color will be the same.",
    },
    {
    "name"          :   "pointplot.line.width",
    "value"         :   2.0,
    "dtype"         :   float,
    "range"         :   [0.001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "Line width of the line connecting points of the same category.",
    },  
    {
    "name"          :   "pointplot.marker.size",
    "value"         :   12,
    "dtype"         :   float,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "Size of markers in points.",
    },  
    {
    "name"          :   "pointplot.error.line.width",
    "value"         :   0.75,
    "dtype"         :   float,
    "range"         :   [0.001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "Line width of the error line for each point.",
    },  
    {
    "name"          :   "pointplot.error.bar.color.as.line",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "If True, the error bar line color equals the line connecting points of the same category.",
    }, 
    {
    "name"          :   "pointplot.edgecolor.as.line",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "If True, the edge color equals the line connecting points of the same category.",
    }, 
    {
    "name"          :   "scale.numeric.x.axis",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "If x axis category can be transformed to numeric values using the split param (below), then scale the x axis ticks correctly.",
    },
    {
    "name"          :   "split.string.x.category",
    "value"         :   " ",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "String used to extract numeric data from categories.",
    },
    {
    "name"          :   "split.string.index",
    "value"         :   0,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Pointplot",
    "description"   :   "Split index to find numeric values. Example '5_min' - using split string '_' and index 0 will yield 5",
    },
    {
    "name"          :   "main.figure.size.scaling",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Main Figure",
    "description"   :   "Enable/Disable scaling if scatter point sizes by calculating the ratio between axes (main vs export).",
    },
    {
    "name"          :   "main.figure.label.size",
    "value"         :   12,
    "dtype"         :   float,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Main Figure",
    "description"   :   "Size of the label of a subplot (a,b,c,d).",
    },

    
    {
    "name"          :   "quick.select.separator",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "QuickSelect",
    "description"   :   "Default separator used to identify unique categories.",
    },
        {
    "name"          :   "quick.select.case.sensitive",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "QuickSelect",
    "description"   :   "Upon loading saved selected lists and/or pasting a list of strings, quick select items are compare with or without case sensititivy.",
    },
    {
    "name"          :   "xy.plot.separate.column.pairs",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, numeric pairs are separeted into differen axis.",
    },
    {
    "name"          :   "xy.plot.against.index",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, data will be plotted against the index. If this option is enabled, it overwrites the single.x option below.",
    },
    {
    "name"          :   "xy.plot.single.x",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, the first column is used as a common x axis. If disabled, eevery second column will be considered as a x-axis. This option is overwritten if xy.plot.against.index is enabled.",
    },
    {
    "name"          :   "xy.plot.show.marker",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, each data point (row) is indicated by a marker.",
    },
    {
    "name"          :   "xy.plot.stem.mode",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, plot plots vertical lines at each x location from the baseline to y, and places a marker there.",
    },
    {
    "name"          :   "xy.plot.bottom.stem",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [-np.inf,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "Baseline location in stemplot.",
    },
    {
    "name"          :   "xy.plot.marker",
    "value"         :   "o",
    "dtype"         :   str,
    "range"         :   ["o","P","s","<",">","^","v",",","h"],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, each data point (row) is indicated by a marker.",
    },
    {
    "name"          :   "xy.plot.marker.size",
    "value"         :   5,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "Marker size.",
    },
    {
    "name"          :   "xy.plot.marker.edge.width",
    "value"         :   0.2,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "Stroke width of markers.",
    },
    {
    "name"          :   "xy.plot.line.style",
    "value"         :   "solid",
    "dtype"         :   str,
    "range"         :   ["solid","dashed","dotted","dashdot","dashed","densely dotted","dashdotdotted"],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "If enabled, each data point (row) is indicated by a marker.",
    },
    {
    "name"          :   "xy.plot.linewidth",
    "value"         :   0.5,
    "dtype"         :   float,
    "range"         :   [0.01,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "Linewidth in XY plots.",
    },
    {
    "name"          :   "xy.plot.alpha",
    "value"         :   0.75,
    "dtype"         :   float,
    "range"         :   [0.01,1],
    "parent"        :   "intern",
    "parentType"    :   "XYPlot",
    "description"   :   "Transparancy of xy plot items.",
    },
    # {
    # "name"          :   "forest.plot.calculated.data",
    # "value"         :   True,
    # "dtype"         :   bool,
    # "range"         :   [True,False],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "If true, it is assumed that you provided numeric columns for (mean,CI_lower,CI_upper).",
    # },
    # {
    # "name"          :   "forest.plot.markersize",
    # "value"         :   15,
    # "dtype"         :   float,
    # "range"         :   [1,np.inf],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Size of forestplot marker.",
    # },
    # {
    # "name"          :   "forest.plot.use.colormap",
    # "value"         :   True,
    # "dtype"         :   bool,
    # "range"         :   [True,False],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "If true, the circles of the mean will be colored using the currently selected colormap. If false the color given by forest.plot.marker.color is used.",
    # },
    # {
    # "name"          :   "forest.plot.marker.color",
    # "value"         :   "#ffffff",
    # "dtype"         :   str,
    # "range"         :   "regExMatch",
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Facecolor of forestplot marker points.",
    # "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    # "isColor"       :   True
    # },
    # {
    # "name"          :   "forest.plot.marker",
    # "value"         :   "o",
    # "dtype"         :   str,
    # "range"         :   ["o","P","s","<",">","^","v",",","h"],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Marker type in forest plots.",
    # },
    # {
    # "name"          :   "forest.plot.line.color",
    # "value"         :   "#504f4e",
    # "dtype"         :   str,
    # "range"         :   "regExMatch",
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Facecolor of forestplot marker points.",
    # "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    # "isColor"       :   True
    # },
    # {
    # "name"          :   "forest.plot.line.width",
    # "value"         :   0.5,
    # "dtype"         :   float,
    # "range"         :   [0,np.inf],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Linewidth of forestplot lines.",
    # },
    # {
    # "name"          :   "forest.plot.lower.bound.color",
    # "value"         :   "#503a61",
    # "dtype"         :   str,
    # "range"         :   "regExMatch",
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Facecolor of forestplot lower boundmarker points.",
    # "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    # "isColor"       :   True
    # },
    # {
    # "name"          :   "forest.plot.upper.bound.color",
    # "value"         :   "#237561",
    # "dtype"         :   str,
    # "range"         :   "regExMatch",
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Facecolor of forestplot upper boundmarker points.",
    # "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    # "isColor"       :   True
    # },
    # {
    # "name"          :   "forest.plot.bound.marker",
    # "value"         :   "o",
    # "dtype"         :   str,
    # "range"         :   ["o","P","s","<",">","^","v",",","h"],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Marker type in forest plots.",
    # },
    # {
    # "name"          :   "forest.plot.line.ratio.one",
    # "value"         :   True,
    # "dtype"         :   bool,
    # "range"         :   [True,False],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Add a vertical line at x-value one.",
    # },
    # {
    # "name"          :   "forest.plot.cont.table.ratio",
    # "value"         :   "oddsRatio",
    # "dtype"         :   str,
    # "range"         :   ["oddsRatio","riskRatio","logOddsRatio"],
    # "parent"        :   "intern",
    # "parentType"    :   "Forestplot",
    # "description"   :   "Ratio to plot in the forest plot.",
    # },
    {
    "name"          :   "word.cloud.categories_to_frequencies",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "If enabled, frequencies are determined by using each row as a unique value. You can split categories based on a string (set split string, for GOTerms for example to ';'."
    },
    {
    "name"          :   "word.cloud.split_string",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "If categories_to_frequencies is enabled, unique values are found by splitting row strings by this string."
    },
    {
    "name"          :   "word.cloud.min_font_size",
    "value"         :   4,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "Minimal font size used.",
    },
    {
    "name"          :   "word.cloud.max_font_size",
    "value"         :   80,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "Maximal font size used.",
    },
    {
    "name"          :   "word.cloud.max_words",
    "value"         :   400,
    "dtype"         :   int,
    "range"         :   [3,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "Maximal number of words.",
    },
    {
    "name"          :   "word.cloud.background_color",
    "value"         :   "#ffffff",
    "dtype"         :   str,
    "range"         :   "regExMatch",
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "Background color of word cloud.",
    "regEx"         :   r"^#(?:[0-9a-fA-F]{6}){1,2}$",
    "isColor"       :   True
    },
    {
    "name"          :   "word.cloud.normalize_plurals",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "Whether to remove trailing 's' from words. Ignore if generate_from_frequencies is True."
    },
    {
    "name"          :   "word.cloud.include_numbers",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "WordCloud",
    "description"   :   "Whether to include numbers as phrases or not. Ignore if generate_from_frequencies is True."
    },
    {
    "name"          :   "mt.method",
    "value"         :   "fdr_bh",
    "dtype"         :   str,
    "range"         :   MTMethods,
    "parent"        :   "intern",
    "parentType"    :   "Multiple Testing Correction",
    "description"   :   "Default method for multiple testing correction."
    },
    {
    "name"          :   "mt.add.categorical.column",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Multiple Testing Correction",
    "description"   :   "If True, categorical column will be added indicating by '+' if hypothesis can be rejected for given alpha."
    },
    {
    "name"          :   "mt.alpha",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Multiple Testing Correction",
    "description"   :   "FWER, family-wise error rate."
    },
    {
    "name"          :   "reg.exp.fasta.filter",
    "value"         :   "\|(.*)\|",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Fasta file filtering",
    "description"   :   "The regular expression to identify the id to match in a fasta file. \|(.*)\| is the standard for uniprot ids."
    },
    {
    "name"          :   "reg.exp.escape",
    "value"         :   False,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Fasta file filtering",
    "description"   :   "If True, regular expression will use re.escape."
    },
    {
    "name"          :   "source.data.filter.logical.op",
    "value"         :   "and",
    "dtype"         :   str,
    "range"         :   ["and","or"],
    "parent"        :   "intern",
    "parentType"    :   "Data View",
    "description"   :   "Spreadsheet like filtering in the source table. Use 'and' if each of the filter criteria match or 'or' if only one should match."
    },
    {
    "name"          :   "fit.model.min.non.nan",
    "value"         :   3,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Model fitting",
    "description"   :   "Minimum number of non-nan values for fitting a model (e.g. linear fit, first order kinetic). A minimum value of 2 is allowed but this will return always a r-value = 1 and is not informative."
    },
    {
    "name"          :   "categorical.enrichment.min.group.size",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Minimum group size for an enrichment using the fisher exact test."
    },
    {
    "name"          :   "categorical.enrichment.adj.pvalue.cutoff",
    "value"         :   0.02,
    "dtype"         :   float,
    "range"         :   [0,1],
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Adjusted p-value cutoff. Results will be filtered using this cutoff."
    },
    {
    "name"          :   "categorical.enrichment.multipletest.method",
    "value"         :   "fdr_tsbh",
    "dtype"         :   str,
    "range"         :   MTMethods,
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Method to correct for multiple testing of the p value from fisher test and chi2 test"
    },
    {
    "name"          :   "1D.enrichment.min.category.group.size",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [1,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Minimal group size. If the groupsize (e.g. rows that contain the specific category such as a GO term) is below the value, no enrichment will be calculated."
    },  
    {
    "name"          :   "1D.enrichment.min.abs.group.difference",
    "value"         :   0,
    "dtype"         :   float,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Minimal difference between groups. One group represents the subset of rows that contain the tested category and the other group are the rest of rows (features).\nPlease note that first the size of the group is checked and then the difference."
    },  
    {
    "name"          :   "1D.enrichment.alternative",
    "value"         :   "two-sided",
    "dtype"         :   str,
    "range"         :   ["two-sided","less","greater"],
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Hypothesis alternative for Whitney Mann U-test performed in 1D Enrichments."
    },
    {
    "name"          :   "1D.enrichment.split.string",
    "value"         :   ";",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Split string to separate categories."
    },
    {
    "name"          :   "1D.enrichment.adj.p.value.cutoff",
    "value"         :   0.05,
    "dtype"         :   float,
    "range"         :   [0.0,1.0],
    "parent"        :   "intern",
    "parentType"    :   "Enrichments (Omics Toolkit)",
    "description"   :   "Cutoff used to filter results of a 1D Enrichment. If set to 1, no filtering will be performed and all categories will be reported."
    },
    {
    "name"          :   "n.processes.multiprocessing",
    "value"         :   5,
    "dtype"         :   int,
    "range"         :   [2,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Multiprocessing",
    "description"   :   "Number of processes to be spawn when multiprocessing is utilized."
    },
    {
    "name"          :   "favorite.1.splitString",
    "value"         :   "_",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Groupings",
    "description"   :   "."
    },
    {
    "name"          :   "favorite.2.splitString",
    "value"         :   "-",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Groupings",
    "description"   :   "."
    },
    {
    "name"          :   "favorite.3.splitString",
    "value"         :   ":",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "Groupings",
    "description"   :   "."
    },
    {
    "name"          :   "favorite.1.index",
    "value"         :   0,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Groupings",
    "description"   :   "."
    },
    {
    "name"          :   "favorite.2.index",
    "value"         :   0,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Groupings",
    "description"   :   "."
    },
    {
    "name"          :   "favorite.3.index",
    "value"         :   2,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Groupings",
    "description"   :   "."
    },
    {
    "name"          :   "fill.NaN.add.indicator.column",
    "value"         :   True,
    "dtype"         :   bool,
    "range"         :   [True,False],
    "parent"        :   "intern",
    "parentType"    :   "Fill NaN (Imputation)",
    "description"   :   "Adds a categorical column indicating via a '+' sign if the value has been imputed."
    },
    {
    "name"          :   "fill.NaN.gaussian.downshift",
    "value"         :   1.8,
    "dtype"         :   float,
    "range"         :   [0.0001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Fill NaN (Imputation)",
    "description"   :   "Downshift of the gaussian distribution from which values for NaN are randomly drawn. 1.8 indicates a downshift by 1.8 times the standard deviation of the original distribution. This setting is also used by the 'smart replace'."
    },
    {
    "name"          :   "fill.NaN.gaussian.width",
    "value"         :   0.3,
    "dtype"         :   float,
    "range"         :   [0.0000001,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Fill NaN (Imputation)",
    "description"   :   "Scaled standard deviation (scale) of the gaussian distribution from which the data for NaN replacement are drawn. 0.3 indicates that the standard deviation is 0.3*(standard deviation) from the original distribution. This setting is also used by the 'smart replace'."
    },
    {
    "name"          :   "fill.NaN.smart.repl.number.NaN.for.downshift",
    "value"         :   4,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Fill NaN (Imputation)",
    "description"   :   "The number of NaNs that is required in the 'smart replace' process per group in order to fill NaNs by downshifted gaussian values."
    },
    {
    "name"          :   "fill.NaN.smart.repl.min.number.valid.values",
    "value"         :   4,
    "dtype"         :   int,
    "range"         :   [0,np.inf],
    "parent"        :   "intern",
    "parentType"    :   "Fill NaN (Imputation)",
    "description"   :   "The minimum number of non-nan(valid) values in the 'smart replace' process per group in order to fill NaNs by downshifted gaussian values."
    },
    {
    "name"          :   "mitocube.api.url",
    "value"         :   "https://app.mitocube.com",
    "dtype"         :   str,
    "range"         :   "any",
    "parent"        :   "intern",
    "parentType"    :   "MitoCube Connect",
    "description"   :   "The url or ip adress of the  MitoCube instance. It is assume that the api is reachable under url/api/"
    }
    # {
    # "name"          :   "mitocube.share.token",
    # "value"         :   "",
    # "dtype"         :   str,
    # "range"         :   "any",
    # "parent"        :   "intern",
    # "parentType"    :   "MitoCube Connect",
    # "description"   :   "A share token that authenticates you and allows to get data from the MitoCube api."
    # }
    ]
				